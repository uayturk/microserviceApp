<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ufuk</groupId>
  <artifactId>microserviceApp</artifactId>
  <packaging>pom</packaging>
  <version>10.0.1</version>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <!--<version>2.7.2</version>-->
    <version>2.2.0.RELEASE</version>
    <relativePath/> <!--relativePath : Bulunduğu bir üst projenin pomunu referans olarak çalıştırsın-->
  </parent>

  <name>microserviceApp</name>
  <description>Microservice App</description>

  <properties>
    <java.version>11</java.version>
    <!--<spring.cloud.version>2021.0.3</spring.cloud.version>-->
    <spring.cloud.version>Hoxton.RELEASE</spring.cloud.version>
  </properties>

  <modules>
    <module>account-service</module>
    <module>service-parent</module>
    <module>config-server</module>
    <module>eureka-server</module>
    <module>ticket-service</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <!--
  https://stackoverflow.com/questions/72184894/dependency-not-appearing-in-dependency-tree-but-there-in-pom
  Mesela lombok her alt seviste kullanılsın istiyoruz, dependencyManagement içine koyarsak mesela account-service
  lombok'a erişemiyor. Bu tarz dependency'leri   <dependencies> içine vermek gerek
   -->
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!--http://localhost:8088/accountservice/swagger-ui/       swagger-ui 3.0.0 da artık  springfox-swagger-ui ve springfox-swagger2 ayrı ayrı koymaya gerek yok. yeni url de bu -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-boot-starter</artifactId>
      <version>3.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-to-slf4j</artifactId>
      <version>2.16.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.16.0</version>
    </dependency>
    <!-- END of Swagger Docs -->
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.yml</include>
          <include>**/*.json</include>
        </includes>
      </resource>
    </resources>
  </build>


</project>